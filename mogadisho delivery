<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mogadishu Eats - Food Delivery</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary: #ff6b6b;
            --secondary: #4ecdc4;
            --dark: #292f36;
            --light: #f7fff7;
            --accent: #ff9f1c;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f5f5;
            color: var(--dark);
            line-height: 1.6;
        }
        
        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        header {
            background-color: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
        }
        
        .logo {
            font-size: 24px;
            font-weight: bold;
            color: var(--primary);
            display: flex;
            align-items: center;
        }
        
        .logo i {
            margin-right: 10px;
        }
        
        .nav-links {
            display: flex;
            list-style: none;
        }
        
        .nav-links li {
            margin-left: 20px;
        }
        
        .nav-links a {
            text-decoration: none;
            color: var(--dark);
            font-weight: 500;
            transition: color 0.3s;
        }
        
        .nav-links a:hover {
            color: var(--primary);
        }
        
        .auth-buttons .btn {
            margin-left: 10px;
        }
        
        .btn {
            padding: 8px 16px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s;
        }
        
        .btn-primary {
            background-color: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background-color: #ff5252;
        }
        
        .btn-outline {
            background-color: transparent;
            border: 1px solid var(--primary);
            color: var(--primary);
        }
        
        .btn-outline:hover {
            background-color: var(--primary);
            color: white;
        }
        
        .btn-secondary {
            background-color: var(--secondary);
            color: white;
        }
        
        .btn-secondary:hover {
            background-color: #3dbeb6;
        }
        
        .hero {
            background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1504674900247-0877df9cc836?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-position: center;
            height: 400px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            color: white;
            margin-bottom: 40px;
        }
        
        .hero-content h1 {
            font-size: 48px;
            margin-bottom: 20px;
        }
        
        .hero-content p {
            font-size: 20px;
            margin-bottom: 30px;
        }
        
        .search-bar {
            display: flex;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .search-bar input {
            flex: 1;
            padding: 12px 20px;
            border: none;
            border-radius: 4px 0 0 4px;
            font-size: 16px;
        }
        
        .search-bar button {
            padding: 12px 20px;
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 0 4px 4px 0;
            cursor: pointer;
        }
        
        .section-title {
            text-align: center;
            margin-bottom: 40px;
            font-size: 32px;
            color: var(--dark);
        }
        
        .restaurants {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 30px;
            margin-bottom: 50px;
        }
        
        .restaurant-card {
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .restaurant-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .restaurant-img {
            height: 180px;
            width: 100%;
            object-fit: cover;
        }
        
        .restaurant-info {
            padding: 20px;
        }
        
        .restaurant-info h3 {
            margin-bottom: 10px;
            font-size: 20px;
        }
        
        .restaurant-info p {
            color: #666;
            margin-bottom: 15px;
        }
        
        .rating {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .rating span {
            color: var(--accent);
            margin-right: 5px;
        }
        
        .footer {
            background-color: var(--dark);
            color: white;
            padding: 50px 0 20px;
            margin-top: 50px;
        }
        
        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 30px;
            margin-bottom: 30px;
        }
        
        .footer-column h3 {
            margin-bottom: 20px;
            font-size: 18px;
        }
        
        .footer-column ul {
            list-style: none;
        }
        
        .footer-column ul li {
            margin-bottom: 10px;
        }
        
        .footer-column ul li a {
            color: #ccc;
            text-decoration: none;
            transition: color 0.3s;
        }
        
        .footer-column ul li a:hover {
            color: white;
        }
        
        .social-icons {
            display: flex;
            gap: 15px;
        }
        
        .social-icons a {
            color: white;
            font-size: 20px;
        }
        
        .copyright {
            text-align: center;
            padding-top: 20px;
            border-top: 1px solid #444;
            color: #aaa;
            font-size: 14px;
        }
        
        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            overflow-y: auto;
        }
        
        .modal-content {
            background-color: white;
            margin: 50px auto;
            padding: 30px;
            border-radius: 8px;
            width: 90%;
            max-width: 600px;
            position: relative;
        }
        
        .close-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 24px;
            cursor: pointer;
            color: #666;
        }
        
        .modal-title {
            margin-bottom: 20px;
            font-size: 24px;
            color: var(--dark);
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        
        .form-group textarea {
            min-height: 100px;
            resize: vertical;
        }
        
        /* Admin styles */
        .admin-panel {
            padding: 40px 0;
        }
        
        .admin-nav {
            display: flex;
            margin-bottom: 30px;
            border-bottom: 1px solid #ddd;
        }
        
        .admin-nav button {
            padding: 10px 20px;
            background: none;
            border: none;
            cursor: pointer;
            font-weight: 500;
            color: #666;
            border-bottom: 2px solid transparent;
        }
        
        .admin-nav button.active {
            color: var(--primary);
            border-bottom: 2px solid var(--primary);
        }
        
        .admin-content {
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
        }
        
        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        th {
            background-color: #f5f5f5;
            font-weight: 600;
        }
        
        tr:hover {
            background-color: #f9f9f9;
        }
        
        .action-btn {
            padding: 5px 10px;
            margin-right: 5px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        /* Restaurant menu styles */
        .menu-container {
            display: grid;
            grid-template-columns: 250px 1fr;
            gap: 30px;
        }
        
        .menu-sidebar {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            height: fit-content;
        }
        
        .menu-items {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .menu-card {
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        
        .menu-card-img {
            height: 180px;
            width: 100%;
            object-fit: cover;
        }
        
        .menu-card-body {
            padding: 15px;
        }
        
        .menu-card-title {
            font-size: 18px;
            margin-bottom: 10px;
        }
        
        .menu-card-desc {
            color: #666;
            margin-bottom: 15px;
            font-size: 14px;
        }
        
        .menu-card-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .menu-card-price {
            font-weight: bold;
            color: var(--primary);
        }
        
        .add-to-cart {
            background-color: var(--primary);
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
        }
        
        /* Cart styles */
        .cart-container {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 30px;
        }
        
        .cart-items {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .cart-summary {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            height: fit-content;
        }
        
        .cart-item {
            display: flex;
            margin-bottom: 20px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }
        
        .cart-item-img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 4px;
            margin-right: 15px;
        }
        
        .cart-item-details {
            flex: 1;
        }
        
        .cart-item-title {
            font-weight: 500;
            margin-bottom: 5px;
        }
        
        .cart-item-restaurant {
            color: #666;
            font-size: 14px;
            margin-bottom: 10px;
        }
        
        .cart-item-price {
            font-weight: bold;
            color: var(--primary);
        }
        
        .cart-item-actions {
            display: flex;
            align-items: center;
        }
        
        .quantity-control {
            display: flex;
            align-items: center;
            margin-right: 15px;
        }
        
        .quantity-btn {
            width: 25px;
            height: 25px;
            background-color: #f0f0f0;
            border: none;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .quantity-input {
            width: 40px;
            text-align: center;
            margin: 0 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 2px;
        }
        
        .remove-item {
            color: #ff6b6b;
            cursor: pointer;
        }
        
        .summary-title {
            font-size: 20px;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        
        .summary-total {
            font-weight: bold;
            font-size: 18px;
            margin-top: 20px;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }
        
        /* Checkout styles */
        .checkout-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }
        
        .delivery-details, .payment-method {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .payment-option {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .payment-option:hover {
            border-color: var(--primary);
        }
        
        .payment-option input {
            margin-right: 10px;
        }
        
        .payment-option i {
            margin-right: 10px;
            font-size: 24px;
            color: #666;
        }
        
        .evc-form {
            margin-top: 20px;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 4px;
            display: none;
        }
        
        .evc-form.active {
            display: block;
        }
        
        /* Order confirmation */
        .confirmation-container {
            text-align: center;
            padding: 50px 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            max-width: 600px;
            margin: 50px auto;
        }
        
        .confirmation-icon {
            font-size: 60px;
            color: var(--secondary);
            margin-bottom: 20px;
        }
        
        .confirmation-title {
            font-size: 28px;
            margin-bottom: 20px;
        }
        
        .confirmation-details {
            margin-bottom: 30px;
            text-align: left;
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
        }
        
        .confirmation-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        
        /* Responsive styles */
        @media (max-width: 768px) {
            .menu-container, .cart-container, .checkout-container {
                grid-template-columns: 1fr;
            }
            
            .nav-links {
                display: none;
            }
            
            .hero-content h1 {
                font-size: 36px;
            }
            
            .hero-content p {
                font-size: 18px;
            }
            
            .restaurants {
                grid-template-columns: 1fr;
            }
        }
        
        /* Utility classes */
        .text-center {
            text-align: center;
        }
        
        .mb-20 {
            margin-bottom: 20px;
        }
        
        .mt-20 {
            margin-top: 20px;
        }
        
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <nav>
                <div class="logo">
                    <i class="fas fa-utensils"></i>
                    <span>Mogadishu Eats</span>
                </div>
                <ul class="nav-links">
                    <li><a href="#" class="home-link">Home</a></li>
                    <li><a href="#" class="restaurants-link">Restaurants</a></li>
                    <li><a href="#" class="about-link">About</a></li>
                    <li><a href="#" class="contact-link">Contact</a></li>
                </ul>
                <div class="auth-buttons">
                    <button class="btn btn-outline login-btn">Login</button>
                    <button class="btn btn-primary signup-btn">Sign Up</button>
                    <button class="btn btn-secondary admin-btn hidden">Admin</button>
                    <button class="btn btn-secondary vendor-btn hidden">Vendor</button>
                    <button class="btn btn-outline logout-btn hidden">Logout</button>
                    <a href="#" class="cart-link" style="position: relative;">
                        <i class="fas fa-shopping-cart" style="font-size: 20px; color: var(--dark);"></i>
                        <span class="cart-count" style="position: absolute; top: -10px; right: -10px; background-color: var(--primary); color: white; border-radius: 50%; width: 20px; height: 20px; display: flex; align-items: center; justify-content: center; font-size: 12px;">0</span>
                    </a>
                </div>
            </nav>
        </div>
    </header>

    <main class="container">
        <!-- Home Page -->
        <section class="home-page">
            <div class="hero">
                <div class="hero-content">
                    <h1>Delicious Food Delivered To Your Doorstep</h1>
                    <p>Order from your favorite restaurants in Mogadishu</p>
                    <div class="search-bar">
                        <input type="text" placeholder="Search for restaurants or food...">
                        <button><i class="fas fa-search"></i></button>
                    </div>
                </div>
            </div>

            <h2 class="section-title">Popular Restaurants in Mogadishu</h2>
            <div class="restaurants" id="restaurants-container">
                <!-- Restaurants will be loaded here -->
            </div>
        </section>

        <!-- Restaurant Menu Page -->
        <section class="restaurant-menu-page hidden">
            <button class="btn btn-outline back-to-restaurants"><i class="fas fa-arrow-left"></i> Back to Restaurants</button>
            <div class="menu-container mt-20">
                <div class="menu-sidebar">
                    <h3 id="restaurant-name-menu"></h3>
                    <p id="restaurant-description"></p>
                    <div class="rating">
                        <span>★★★★★</span>
                        <span>(120 reviews)</span>
                    </div>
                    <p><i class="fas fa-map-marker-alt"></i> <span id="restaurant-location"></span></p>
                    <p><i class="fas fa-clock"></i> <span id="restaurant-hours"></span></p>
                </div>
                <div class="menu-items" id="menu-items-container">
                    <!-- Menu items will be loaded here -->
                </div>
            </div>
        </section>

        <!-- Cart Page -->
        <section class="cart-page hidden">
            <h2 class="section-title">Your Cart</h2>
            <div class="cart-container">
                <div class="cart-items">
                    <div id="cart-items-container">
                        <!-- Cart items will be loaded here -->
                        <p class="text-center" id="empty-cart-message">Your cart is empty</p>
                    </div>
                </div>
                <div class="cart-summary">
                    <h3 class="summary-title">Order Summary</h3>
                    <div class="summary-row">
                        <span>Subtotal</span>
                        <span id="subtotal">$0.00</span>
                    </div>
                    <div class="summary-row">
                        <span>Delivery Fee</span>
                        <span id="delivery-fee">$2.00</span>
                    </div>
                    <div class="summary-row summary-total">
                        <span>Total</span>
                        <span id="total">$2.00</span>
                    </div>
                    <button class="btn btn-primary btn-block mt-20" id="checkout-btn">Proceed to Checkout</button>
                </div>
            </div>
        </section>

        <!-- Checkout Page -->
        <section class="checkout-page hidden">
            <h2 class="section-title">Checkout</h2>
            <div class="checkout-container">
                <div class="delivery-details">
                    <h3>Delivery Details</h3>
                    <form id="delivery-form">
                        <div class="form-group">
                            <label for="name">Full Name</label>
                            <input type="text" id="name" required>
                        </div>
                        <div class="form-group">
                            <label for="phone">Phone Number</label>
                            <input type="tel" id="phone" required>
                        </div>
                        <div class="form-group">
                            <label for="address">Delivery Address</label>
                            <input type="text" id="address" required>
                        </div>
                        <div class="form-group">
                            <label for="notes">Delivery Notes (Optional)</label>
                            <textarea id="notes"></textarea>
                        </div>
                    </form>
                </div>
                <div class="payment-method">
                    <h3>Payment Method</h3>
                    <div class="payment-option">
                        <input type="radio" id="evc-payment" name="payment" value="evc" checked>
                        <i class="fas fa-mobile-alt"></i>
                        <label for="evc-payment">EVC Plus</label>
                    </div>
                    <div class="payment-option">
                        <input type="radio" id="cash-payment" name="payment" value="cash">
                        <i class="fas fa-money-bill-wave"></i>
                        <label for="cash-payment">Cash on Delivery</label>
                    </div>
                    
                    <div class="evc-form active" id="evc-form">
                        <h4>EVC Plus Payment</h4>
                        <div class="form-group">
                            <label for="evc-number">EVC Plus Number</label>
                            <input type="tel" id="evc-number" placeholder="2526XXXXXXXX" required>
                        </div>
                        <div class="form-group">
                            <label for="evc-pin">PIN</label>
                            <input type="password" id="evc-pin" placeholder="4-digit PIN" required>
                        </div>
                    </div>
                    
                    <button class="btn btn-primary btn-block mt-20" id="place-order-btn">Place Order</button>
                </div>
            </div>
        </section>

        <!-- Order Confirmation Page -->
        <section class="confirmation-page hidden">
            <div class="confirmation-container">
                <div class="confirmation-icon">
                    <i class="fas fa-check-circle"></i>
                </div>
                <h2 class="confirmation-title">Order Confirmed!</h2>
                <p>Thank you for your order. We've received it and will start preparing your food right away.</p>
                
                <div class="confirmation-details">
                    <div class="confirmation-row">
                        <span>Order Number:</span>
                        <span id="order-number">#12345</span>
                    </div>
                    <div class="confirmation-row">
                        <span>Estimated Delivery:</span>
                        <span id="delivery-time">30-45 minutes</span>
                    </div>
                    <div class="confirmation-row">
                        <span>Total Amount:</span>
                        <span id="order-total">$22.00</span>
                    </div>
                </div>
                
                <button class="btn btn-primary" id="back-to-home-btn">Back to Home</button>
            </div>
        </section>

        <!-- Admin Panel -->
        <section class="admin-panel hidden">
            <h2 class="section-title">Admin Dashboard</h2>
            <div class="admin-nav">
                <button class="admin-nav-btn active" data-tab="restaurants">Restaurants</button>
                <button class="admin-nav-btn" data-tab="orders">Orders</button>
                <button class="admin-nav-btn" data-tab="users">Users</button>
            </div>
            
            <div class="admin-content">
                <div class="admin-tab active" id="restaurants-tab">
                    <button class="btn btn-primary mb-20" id="add-restaurant-btn">Add Restaurant</button>
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Location</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="admin-restaurants-table">
                            <!-- Restaurants will be loaded here -->
                        </tbody>
                    </table>
                </div>
                
                <div class="admin-tab" id="orders-tab">
                    <table>
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Restaurant</th>
                                <th>Amount</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="admin-orders-table">
                            <!-- Orders will be loaded here -->
                        </tbody>
                    </table>
                </div>
                
                <div class="admin-tab" id="users-tab">
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="admin-users-table">
                            <!-- Users will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </section>

        <!-- Vendor Panel -->
        <section class="vendor-panel hidden">
            <h2 class="section-title">Vendor Dashboard</h2>
            <div class="admin-nav">
                <button class="vendor-nav-btn active" data-tab="menu">Menu</button>
                <button class="vendor-nav-btn" data-tab="vendor-orders">Orders</button>
            </div>
            
            <div class="admin-content">
                <div class="vendor-tab active" id="menu-tab">
                    <button class="btn btn-primary mb-20" id="add-menu-item-btn">Add Menu Item</button>
                    <div id="vendor-menu-items">
                        <!-- Menu items will be loaded here -->
                    </div>
                </div>
                
                <div class="vendor-tab" id="vendor-orders-tab">
                    <table>
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Items</th>
                                <th>Amount</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="vendor-orders-table">
                            <!-- Orders will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
    </main>

    <!-- Login Modal -->
    <div class="modal" id="login-modal">
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <h2 class="modal-title">Login</h2>
            <form id="login-form">
                <div class="form-group">
                    <label for="login-email">Email</label>
                    <input type="email" id="login-email" required>
                </div>
                <div class="form-group">
                    <label for="login-password">Password</label>
                    <input type="password" id="login-password" required>
                </div>
                <div class="form-group">
                    <label>
                        <input type="checkbox" id="remember-me"> Remember me
                    </label>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Login</button>
                <p class="text-center mt-20">Don't have an account? <a href="#" class="show-signup">Sign up</a></p>
            </form>
        </div>
    </div>

    <!-- Signup Modal -->
    <div class="modal" id="signup-modal">
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <h2 class="modal-title">Create Account</h2>
            <form id="signup-form">
                <div class="form-group">
                    <label for="signup-name">Full Name</label>
                    <input type="text" id="signup-name" required>
                </div>
                <div class="form-group">
                    <label for="signup-email">Email</label>
                    <input type="email" id="signup-email" required>
                </div>
                <div class="form-group">
                    <label for="signup-password">Password</label>
                    <input type="password" id="signup-password" required>
                </div>
                <div class="form-group">
                    <label for="signup-confirm-password">Confirm Password</label>
                    <input type="password" id="signup-confirm-password" required>
                </div>
                <div class="form-group">
                    <label for="user-role">I want to:</label>
                    <select id="user-role" required>
                        <option value="">Select role</option>
                        <option value="user">Order food</option>
                        <option value="vendor">Register my restaurant</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Create Account</button>
                <p class="text-center mt-20">Already have an account? <a href="#" class="show-login">Login</a></p>
            </form>
        </div>
    </div>

    <!-- Add Restaurant Modal -->
    <div class="modal" id="add-restaurant-modal">
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <h2 class="modal-title">Add Restaurant</h2>
            <form id="restaurant-form">
                <div class="form-group">
                    <label for="restaurant-name">Restaurant Name</label>
                    <input type="text" id="restaurant-name" required>
                </div>
                <div class="form-group">
                    <label for="restaurant-description">Description</label>
                    <textarea id="restaurant-description" required></textarea>
                </div>
                <div class="form-group">
                    <label for="restaurant-location">Location</label>
                    <input type="text" id="restaurant-location" required>
                </div>
                <div class="form-group">
                    <label for="restaurant-hours">Opening Hours</label>
                    <input type="text" id="restaurant-hours" placeholder="e.g. 9:00 AM - 10:00 PM" required>
                </div>
                <div class="form-group">
                    <label for="restaurant-image">Image URL</label>
                    <input type="text" id="restaurant-image" placeholder="https://example.com/image.jpg" required>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Save Restaurant</button>
            </form>
        </div>
    </div>

    <!-- Add Menu Item Modal -->
    <div class="modal" id="add-menu-item-modal">
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <h2 class="modal-title">Add Menu Item</h2>
            <form id="menu-item-form">
                <div class="form-group">
                    <label for="item-name">Item Name</label>
                    <input type="text" id="item-name" required>
                </div>
                <div class="form-group">
                    <label for="item-description">Description</label>
                    <textarea id="item-description" required></textarea>
                </div>
                <div class="form-group">
                    <label for="item-price">Price ($)</label>
                    <input type="number" id="item-price" step="0.01" required>
                </div>
                <div class="form-group">
                    <label for="item-image">Image URL</label>
                    <input type="text" id="item-image" placeholder="https://example.com/image.jpg" required>
                </div>
                <div class="form-group">
                    <label for="item-available">Available</label>
                    <select id="item-available" required>
                        <option value="true">Yes</option>
                        <option value="false">No</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Save Menu Item</button>
            </form>
        </div>
    </div>

    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-column">
                    <h3>Mogadishu Eats</h3>
                    <p>Delivering delicious food to your doorstep in Mogadishu since 2023.</p>
                    <div class="social-icons">
                        <a href="#"><i class="fab fa-facebook"></i></a>
                        <a href="#"><i class="fab fa-twitter"></i></a>
                        <a href="#"><i class="fab fa-instagram"></i></a>
                    </div>
                </div>
                <div class="footer-column">
                    <h3>Quick Links</h3>
                    <ul>
                        <li><a href="#">Home</a></li>
                        <li><a href="#">Restaurants</a></li>
                        <li><a href="#">About Us</a></li>
                        <li><a href="#">Contact</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Help</h3>
                    <ul>
                        <li><a href="#">FAQs</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                        <li><a href="#">Terms of Service</a></li>
                        <li><a href="#">Delivery Areas</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Contact Us</h3>
                    <ul>
                        <li><i class="fas fa-phone"></i> +252 61 123 4567</li>
                        <li><i class="fas fa-envelope"></i> info@mogdishueats.com</li>
                        <li><i class="fas fa-map-marker-alt"></i> Wadada Wararka, Mogadishu, Somalia</li>
                    </ul>
                </div>
            </div>
            <div class="copyright">
                <p>&copy; 2023 Mogadishu Eats. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        // Sample data for restaurants and menu items
        const sampleRestaurants = [
            {
                id: 1,
                name: "Bakaaraha Restaurant",
                description: "Authentic Somali cuisine with a modern twist",
                location: "Bakaaro Market, Mogadishu",
                hours: "8:00 AM - 10:00 PM",
                image: "https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                approved: true,
                menu: [
                    { id: 1, name: "Bariis Iskukaris", description: "Traditional Somali rice with meat and spices", price: 8.99, image: "https://images.unsplash.com/photo-1601050690597-df0568f70950?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 2, name: "Canjeero", description: "Somali pancake served with honey or stew", price: 3.99, image: "https://images.unsplash.com/photo-1565299624946-b28f40a0ae38?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 3, name: "Hilib Ari", description: "Grilled goat meat with spices", price: 12.99, image: "https://images.unsplash.com/photo-1544025162-d76694265947?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 4, name: "Muufo", description: "Somali flatbread with soup or stew", price: 4.99, image: "https://images.unsplash.com/photo-1509440159596-0249088772ff?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true }
                ]
            },
            {
                id: 2,
                name: "Lido Seafood",
                description: "Fresh seafood with ocean views",
                location: "Lido Beach, Mogadishu",
                hours: "10:00 AM - 11:00 PM",
                image: "https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                approved: true,
                menu: [
                    { id: 1, name: "Grilled Lobster", description: "Fresh lobster with garlic butter", price: 24.99, image: "https://images.unsplash.com/photo-1610622842224-cc4c6c75c1d9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 2, name: "Fried Kingfish", description: "Crispy fried kingfish with lemon", price: 14.99, image: "https://images.unsplash.com/photo-1567568443991-6392572523e7?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 3, name: "Seafood Platter", description: "Mixed seafood with rice and salad", price: 18.99, image: "https://images.unsplash.com/photo-1567620832903-9fc6debc209f?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 4, name: "Crab Soup", description: "Creamy crab soup with bread", price: 8.99, image: "https://images.unsplash.com/photo-1547592180-85f173990554?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true }
                ]
            },
            {
                id: 3,
                name: "Pizza Mogadishu",
                description: "Italian-style pizzas with Somali flavors",
                location: "KM4 Area, Mogadishu",
                hours: "11:00 AM - 12:00 AM",
                image: "https://images.unsplash.com/photo-1513104890138-7c749659a591?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                approved: true,
                menu: [
                    { id: 1, name: "Somali Spice Pizza", description: "Pizza with traditional Somali spices", price: 12.99, image: "https://images.unsplash.com/photo-1565299624946-b28f40a0ae38?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 2, name: "Margherita", description: "Classic tomato and mozzarella", price: 10.99, image: "https://images.unsplash.com/photo-1571066811602-716837d681de?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 3, name: "Meat Lovers", description: "Pizza with assorted meats", price: 14.99, image: "https://images.unsplash.com/photo-1604382354936-07c5d9983bd3?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 4, name: "Vegetarian Pizza", description: "Pizza with fresh vegetables", price: 11.99, image: "https://images.unsplash.com/photo-1594007654729-407eedc4be65?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true }
                ]
            },
            {
                id: 4,
                name: "Istanbul Cafe",
                description: "Turkish and Middle Eastern cuisine",
                location: "Makka Al Mukarama Road, Mogadishu",
                hours: "7:00 AM - 11:00 PM",
                image: "https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                approved: true,
                menu: [
                    { id: 1, name: "Mixed Grill", description: "Assorted grilled meats with rice", price: 15.99, image: "https://images.unsplash.com/photo-1559847844-5315695dadae?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 2, name: "Lahmacun", description: "Turkish pizza with minced meat", price: 7.99, image: "https://images.unsplash.com/photo-1565299624946-b28f40a0ae38?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 3, name: "Baklava", description: "Sweet pastry with nuts", price: 5.99, image: "https://images.unsplash.com/photo-1563805042-7684c019e1cb?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 4, name: "Turkish Coffee", description: "Traditional strong coffee", price: 3.99, image: "https://images.unsplash.com/photo-1517701550927-30cf4ba1dba5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true }
                ]
            },
            {
                id: 5,
                name: "Burger Junction",
                description: "American-style burgers with Somali flavors",
                location: "Hodan District, Mogadishu",
                hours: "10:00 AM - 10:00 PM",
                image: "https://images.unsplash.com/photo-1571091718767-18b5b1457add?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                approved: true,
                menu: [
                    { id: 1, name: "Somali Spice Burger", description: "Beef burger with Somali spices", price: 9.99, image: "https://images.unsplash.com/photo-1568901346375-23c9450c58cd?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 2, name: "Chicken Burger", description: "Grilled chicken burger with mayo", price: 8.99, image: "https://images.unsplash.com/photo-1568901346375-23c9450c58cd?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 3, name: "Cheese Fries", description: "Crispy fries with cheese sauce", price: 4.99, image: "https://images.unsplash.com/photo-1541592106381-b31e9677c0e5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true },
                    { id: 4, name: "Mango Milkshake", description: "Creamy milkshake with fresh mango", price: 3.99, image: "https://images.unsplash.com/photo-1505576399279-565b52d4ac71?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80", available: true }
                ]
            }
        ];

        // Sample admin data
        const sampleAdmins = [
            { id: 1, name: "Admin User", email: "admin@example.com", role: "admin" }
        ];

        // Sample users data
        const sampleUsers = [
            { id: 1, name: "John Doe", email: "john@example.com", role: "user" },
            { id: 2, name: "Jane Smith", email: "jane@example.com", role: "user" },
            { id: 3, name: "Bakaaraha Owner", email: "owner@bakaaraha.com", role: "vendor", restaurantId: 1 }
        ];

        // Sample orders data
        const sampleOrders = [
            { id: 1, customer: "John Doe", restaurant: "Bakaaraha Restaurant", amount: 25.97, status: "Delivered", items: [
                { itemId: 1, name: "Bariis Iskukaris", quantity: 2, price: 8.99 },
                { itemId: 2, name: "Canjeero", quantity: 1, price: 3.99 }
            ]},
            { id: 2, customer: "Jane Smith", restaurant: "Lido Seafood", amount: 18.99, status: "Preparing", items: [
                { itemId: 3, name: "Seafood Platter", quantity: 1, price: 18.99 }
            ]}
        ];

        // Initialize data in localStorage if not exists
        if (!localStorage.getItem('restaurants')) {
            localStorage.setItem('restaurants', JSON.stringify(sampleRestaurants));
        }

        if (!localStorage.getItem('admins')) {
            localStorage.setItem('admins', JSON.stringify(sampleAdmins));
        }

        if (!localStorage.getItem('users')) {
            localStorage.setItem('users', JSON.stringify(sampleUsers));
        }

        if (!localStorage.getItem('orders')) {
            localStorage.setItem('orders', JSON.stringify(sampleOrders));
        }

        if (!localStorage.getItem('cart')) {
            localStorage.setItem('cart', JSON.stringify([]));
        }

        if (!localStorage.getItem('currentUser')) {
            localStorage.setItem('currentUser', JSON.stringify(null));
        }

        // DOM Elements
        const homePage = document.querySelector('.home-page');
        const restaurantMenuPage = document.querySelector('.restaurant-menu-page');
        const cartPage = document.querySelector('.cart-page');
        const checkoutPage = document.querySelector('.checkout-page');
        const confirmationPage = document.querySelector('.confirmation-page');
        const adminPanel = document.querySelector('.admin-panel');
        const vendorPanel = document.querySelector('.vendor-panel');
        
        const restaurantsContainer = document.getElementById('restaurants-container');
        const menuItemsContainer = document.getElementById('menu-items-container');
        const cartItemsContainer = document.getElementById('cart-items-container');
        const emptyCartMessage = document.getElementById('empty-cart-message');
        const subtotalElement = document.getElementById('subtotal');
        const deliveryFeeElement = document.getElementById('delivery-fee');
        const totalElement = document.getElementById('total');
        const cartCount = document.querySelector('.cart-count');
        
        const loginModal = document.getElementById('login-modal');
        const signupModal = document.getElementById('signup-modal');
        const addRestaurantModal = document.getElementById('add-restaurant-modal');
        const addMenuItemModal = document.getElementById('add-menu-item-modal');
        
        const loginBtn = document.querySelector('.login-btn');
        const signupBtn = document.querySelector('.signup-btn');
        const logoutBtn = document.querySelector('.logout-btn');
        const adminBtn = document.querySelector('.admin-btn');
        const vendorBtn = document.querySelector('.vendor-btn');
        const cartLink = document.querySelector('.cart-link');
        const backToRestaurantsBtn = document.querySelector('.back-to-restaurants');
        const checkoutBtn = document.getElementById('checkout-btn');
        const placeOrderBtn = document.getElementById('place-order-btn');
        const backToHomeBtn = document.getElementById('back-to-home-btn');
        
        const addRestaurantBtn = document.getElementById('add-restaurant-btn');
        const addMenuItemBtn = document.getElementById('add-menu-item-btn');
        
        const loginForm = document.getElementById('login-form');
        const signupForm = document.getElementById('signup-form');
        const restaurantForm = document.getElementById('restaurant-form');
        const menuItemForm = document.getElementById('menu-item-form');
        const deliveryForm = document.getElementById('delivery-form');
        
        const paymentOptions = document.querySelectorAll('input[name="payment"]');
        const evcForm = document.getElementById('evc-form');
        
        const adminNavBtns = document.querySelectorAll('.admin-nav-btn');
        const adminTabs = document.querySelectorAll('.admin-tab');
        const vendorNavBtns = document.querySelectorAll('.vendor-nav-btn');
        const vendorTabs = document.querySelectorAll('.vendor-tab');
        
        const adminRestaurantsTable = document.getElementById('admin-restaurants-table');
        const adminOrdersTable = document.getElementById('admin-orders-table');
        const adminUsersTable = document.getElementById('admin-users-table');
        const vendorMenuItems = document.getElementById('vendor-menu-items');
        const vendorOrdersTable = document.getElementById('vendor-orders-table');
        
        // Current restaurant ID (for menu page)
        let currentRestaurantId = null;
        let currentVendorRestaurantId = null;

        // Functions
        function loadRestaurants() {
            const restaurants = JSON.parse(localStorage.getItem('restaurants'));
            const approvedRestaurants = restaurants.filter(r => r.approved);
            
            restaurantsContainer.innerHTML = '';
            
            approvedRestaurants.forEach(restaurant => {
                const restaurantCard = document.createElement('div');
                restaurantCard.className = 'restaurant-card';
                restaurantCard.innerHTML = `
                    <img src="${restaurant.image}" alt="${restaurant.name}" class="restaurant-img">
                    <div class="restaurant-info">
                        <h3>${restaurant.name}</h3>
                        <p>${restaurant.description}</p>
                        <div class="rating">
                            <span>★★★★★</span>
                            <span>(120 reviews)</span>
                        </div>
                        <button class="btn btn-primary view-menu-btn" data-id="${restaurant.id}">View Menu</button>
                    </div>
                `;
                restaurantsContainer.appendChild(restaurantCard);
            });
            
            // Add event listeners to view menu buttons
            document.querySelectorAll('.view-menu-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    currentRestaurantId = parseInt(this.getAttribute('data-id'));
                    showRestaurantMenu(currentRestaurantId);
                });
            });
        }

        function showRestaurantMenu(restaurantId) {
            const restaurants = JSON.parse(localStorage.getItem('restaurants'));
            const restaurant = restaurants.find(r => r.id === restaurantId);
            
            if (restaurant) {
                document.getElementById('restaurant-name-menu').textContent = restaurant.name;
                document.getElementById('restaurant-description').textContent = restaurant.description;
                document.getElementById('restaurant-location').textContent = restaurant.location;
                document.getElementById('restaurant-hours').textContent = restaurant.hours;
                
                menuItemsContainer.innerHTML = '';
                
                restaurant.menu.forEach(item => {
                    if (item.available) {
                        const menuItem = document.createElement('div');
                        menuItem.className = 'menu-card';
                        menuItem.innerHTML = `
                            <img src="${item.image}" alt="${item.name}" class="menu-card-img">
                            <div class="menu-card-body">
                                <h4 class="menu-card-title">${item.name}</h4>
                                <p class="menu-card-desc">${item.description}</p>
                                <div class="menu-card-footer">
                                    <span class="menu-card-price">$${item.price.toFixed(2)}</span>
                                    <button class="add-to-cart" data-id="${item.id}" data-restaurant-id="${restaurantId}" data-name="${item.name}" data-price="${item.price}" data-image="${item.image}">Add to Cart</button>
                                </div>
                            </div>
                        `;
                        menuItemsContainer.appendChild(menuItem);
                    }
                });
                
                // Add event listeners to add to cart buttons
                document.querySelectorAll('.add-to-cart').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const item = {
                            id: parseInt(this.getAttribute('data-id')),
                            restaurantId: parseInt(this.getAttribute('data-restaurant-id')),
                            name: this.getAttribute('data-name'),
                            price: parseFloat(this.getAttribute('data-price')),
                            image: this.getAttribute('data-image'),
                            quantity: 1
                        };
                        addToCart(item);
                    });
                });
                
                homePage.classList.add('hidden');
                restaurantMenuPage.classList.remove('hidden');
            }
        }

        function addToCart(item) {
            let cart = JSON.parse(localStorage.getItem('cart'));
            const restaurantId = item.restaurantId;
            
            // Check if cart is empty or contains items from the same restaurant
            if (cart.length === 0 || cart.every(i => i.restaurantId === restaurantId)) {
                // Check if item already exists in cart
                const existingItem = cart.find(i => i.id === item.id && i.restaurantId === restaurantId);
                
                if (existingItem) {
                    existingItem.quantity += 1;
                } else {
                    cart.push(item);
                }
                
                localStorage.setItem('cart', JSON.stringify(cart));
                updateCartCount();
                
                // Show success message
                alert(`${item.name} added to cart!`);
            } else {
                // Show error if trying to add from different restaurant
                alert('You can only order from one restaurant at a time. Please clear your cart or complete your current order first.');
            }
        }

        function updateCartCount() {
            const cart = JSON.parse(localStorage.getItem('cart'));
            const count = cart.reduce((total, item) => total + item.quantity, 0);
            cartCount.textContent = count;
        }

        function loadCart() {
            const cart = JSON.parse(localStorage.getItem('cart'));
            
            if (cart.length === 0) {
                emptyCartMessage.classList.remove('hidden');
                cartItemsContainer.innerHTML = '';
                checkoutBtn.disabled = true;
            } else {
                emptyCartMessage.classList.add('hidden');
                cartItemsContainer.innerHTML = '';
                
                // Get restaurant name
                const restaurants = JSON.parse(localStorage.getItem('restaurants'));
                const restaurantId = cart[0].restaurantId;
                const restaurant = restaurants.find(r => r.id === restaurantId);
                
                cart.forEach(item => {
                    const cartItem = document.createElement('div');
                    cartItem.className = 'cart-item';
                    cartItem.innerHTML = `
                        <img src="${item.image}" alt="${item.name}" class="cart-item-img">
                        <div class="cart-item-details">
                            <h4 class="cart-item-title">${item.name}</h4>
                            <p class="cart-item-restaurant">${restaurant ? restaurant.name : ''}</p>
                            <span class="cart-item-price">$${(item.price * item.quantity).toFixed(2)}</span>
                        </div>
                        <div class="cart-item-actions">
                            <div class="quantity-control">
                                <button class="quantity-btn decrease" data-id="${item.id}">-</button>
                                <input type="number" class="quantity-input" value="${item.quantity}" min="1" data-id="${item.id}">
                                <button class="quantity-btn increase" data-id="${item.id}">+</button>
                            </div>
                            <button class="remove-item" data-id="${item.id}"><i class="fas fa-trash"></i></button>
                        </div>
                    `;
                    cartItemsContainer.appendChild(cartItem);
                });
                
                // Calculate totals
                const subtotal = cart.reduce((total, item) => total + (item.price * item.quantity), 0);
                const deliveryFee = 2.00;
                const total = subtotal + deliveryFee;
                
                subtotalElement.textContent = `$${subtotal.toFixed(2)}`;
                deliveryFeeElement.textContent = `$${deliveryFee.toFixed(2)}`;
                totalElement.textContent = `$${total.toFixed(2)}`;
                
                checkoutBtn.disabled = false;
                
                // Add event listeners to quantity controls
                document.querySelectorAll('.quantity-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const itemId = parseInt(this.getAttribute('data-id'));
                        const isIncrease = this.classList.contains('increase');
                        updateCartItemQuantity(itemId, isIncrease);
                    });
                });
                
                document.querySelectorAll('.quantity-input').forEach(input => {
                    input.addEventListener('change', function() {
                        const itemId = parseInt(this.getAttribute('data-id'));
                        const newQuantity = parseInt(this.value);
                        if (newQuantity > 0) {
                            updateCartItemQuantity(itemId, null, newQuantity);
                        } else {
                            this.value = 1;
                        }
                    });
                });
                
                document.querySelectorAll('.remove-item').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const itemId = parseInt(this.getAttribute('data-id'));
                        removeFromCart(itemId);
                    });
                });
            }
        }

        function updateCartItemQuantity(itemId, isIncrease, newQuantity = null) {
            let cart = JSON.parse(localStorage.getItem('cart'));
            const itemIndex = cart.findIndex(i => i.id === itemId);
            
            if (itemIndex !== -1) {
                if (newQuantity !== null) {
                    cart[itemIndex].quantity = newQuantity;
                } else if (isIncrease) {
                    cart[itemIndex].quantity += 1;
                } else {
                    if (cart[itemIndex].quantity > 1) {
                        cart[itemIndex].quantity -= 1;
                    }
                }
                
                localStorage.setItem('cart', JSON.stringify(cart));
                loadCart();
                updateCartCount();
            }
        }

        function removeFromCart(itemId) {
            let cart = JSON.parse(localStorage.getItem('cart'));
            cart = cart.filter(i => i.id !== itemId);
            localStorage.setItem('cart', JSON.stringify(cart));
            loadCart();
            updateCartCount();
        }

        function clearCart() {
            localStorage.setItem('cart', JSON.stringify([]));
            updateCartCount();
        }

        function loadAdminRestaurants() {
            const restaurants = JSON.parse(localStorage.getItem('restaurants'));
            adminRestaurantsTable.innerHTML = '';
            
            restaurants.forEach(restaurant => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${restaurant.id}</td>
                    <td>${restaurant.name}</td>
                    <td>${restaurant.location}</td>
                    <td>${restaurant.approved ? 'Approved' : 'Pending'}</td>
                    <td>
                        <button class="action-btn btn-primary" data-id="${restaurant.id}" data-action="view">View</button>
                        ${!restaurant.approved ? `<button class="action-btn btn-secondary" data-id="${restaurant.id}" data-action="approve">Approve</button>` : ''}
                        <button class="action-btn btn-outline" data-id="${restaurant.id}" data-action="edit">Edit</button>
                        <button class="action-btn btn-danger" data-id="${restaurant.id}" data-action="delete">Delete</button>
                    </td>
                `;
                adminRestaurantsTable.appendChild(row);
            });
            
            // Add event listeners to action buttons
            document.querySelectorAll('[data-action]').forEach(btn => {
                btn.addEventListener('click', function() {
                    const action = this.getAttribute('data-action');
                    const id = parseInt(this.getAttribute('data-id'));
                    
                    if (action === 'approve') {
                        approveRestaurant(id);
                    } else if (action === 'delete') {
                        deleteRestaurant(id);
                    } else if (action === 'view') {
                        // Implement view functionality
                        alert('View restaurant details');
                    } else if (action === 'edit') {
                        // Implement edit functionality
                        alert('Edit restaurant');
                    }
                });
            });
        }

        function approveRestaurant(id) {
            const restaurants = JSON.parse(localStorage.getItem('restaurants'));
            const restaurantIndex = restaurants.findIndex(r => r.id === id);
            
            if (restaurantIndex !== -1) {
                restaurants[restaurantIndex].approved = true;
                localStorage.setItem('restaurants', JSON.stringify(restaurants));
                loadAdminRestaurants();
            }
        }

        function deleteRestaurant(id) {
            if (confirm('Are you sure you want to delete this restaurant?')) {
                const restaurants = JSON.parse(localStorage.getItem('restaurants'));
                const updatedRestaurants = restaurants.filter(r => r.id !== id);
                localStorage.setItem('restaurants', JSON.stringify(updatedRestaurants));
                loadAdminRestaurants();
            }
        }

        function loadAdminOrders() {
            const orders = JSON.parse(localStorage.getItem('orders'));
            adminOrdersTable.innerHTML = '';
            
            orders.forEach(order => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${order.id}</td>
                    <td>${order.customer}</td>
                    <td>${order.restaurant}</td>
                    <td>$${order.amount.toFixed(2)}</td>
                    <td>${order.status}</td>
                    <td>
                        <button class="action-btn btn-primary" data-id="${order.id}" data-action="view">View</button>
                        <button class="action-btn btn-outline" data-id="${order.id}" data-action="update">Update</button>
                    </td>
                `;
                adminOrdersTable.appendChild(row);
            });
        }

        function loadAdminUsers() {
            const users = JSON.parse(localStorage.getItem('users'));
            adminUsersTable.innerHTML = '';
            
            users.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${user.id}</td>
                    <td>${user.name}</td>
                    <td>${user.email}</td>
                    <td>${user.role}</td>
                    <td>
                        <button class="action-btn btn-primary" data-id="${user.id}" data-action="view">View</button>
                        <button class="action-btn btn-outline" data-id="${user.id}" data-action="edit">Edit</button>
                        <button class="action-btn btn-danger" data-id="${user.id}" data-action="delete">Delete</button>
                    </td>
                `;
                adminUsersTable.appendChild(row);
            });
        }

        function loadVendorMenu() {
            const currentUser = JSON.parse(localStorage.getItem('currentUser'));
            const restaurants = JSON.parse(localStorage.getItem('restaurants'));
            
            if (currentUser && currentUser.role === 'vendor' && currentUser.restaurantId) {
                currentVendorRestaurantId = currentUser.restaurantId;
                const restaurant = restaurants.find(r => r.id === currentVendorRestaurantId);
                
                if (restaurant) {
                    vendorMenuItems.innerHTML = '';
                    
                    restaurant.menu.forEach(item => {
                        const menuItem = document.createElement('div');
                        menuItem.className = 'menu-card';
                        menuItem.innerHTML = `
                            <img src="${item.image}" alt="${item.name}" class="menu-card-img">
                            <div class="menu-card-body">
                                <h4 class="menu-card-title">${item.name}</h4>
                                <p class="menu-card-desc">${item.description}</p>
                                <div class="menu-card-footer">
                                    <span class="menu-card-price">$${item.price.toFixed(2)}</span>
                                    <span>${item.available ? 'Available' : 'Not Available'}</span>
                                    <div>
                                        <button class="action-btn btn-outline" data-id="${item.id}" data-action="edit">Edit</button>
                                        <button class="action-btn btn-danger" data-id="${item.id}" data-action="delete">Delete</button>
                                    </div>
                                </div>
                            </div>
                        `;
                        vendorMenuItems.appendChild(menuItem);
                    });
                }
            }
        }

        function loadVendorOrders() {
            const currentUser = JSON.parse(localStorage.getItem('currentUser'));
            const orders = JSON.parse(localStorage.getItem('orders'));
            const restaurants = JSON.parse(localStorage.getItem('restaurants'));
            
            if (currentUser && currentUser.role === 'vendor' && currentUser.restaurantId) {
                const restaurant = restaurants.find(r => r.id === currentUser.restaurantId);
                
                if (restaurant) {
                    const vendorOrders = orders.filter(order => order.restaurant === restaurant.name);
                    vendorOrdersTable.innerHTML = '';
                    
                    vendorOrders.forEach(order => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${order.id}</td>
                            <td>${order.customer}</td>
                            <td>${order.items.map(i => `${i.name} (x${i.quantity})`).join(', ')}</td>
                            <td>$${order.amount.toFixed(2)}</td>
                            <td>${order.status}</td>
                            <td>
                                <button class="action-btn btn-primary" data-id="${order.id}" data-action="view">View</button>
                                <button class="action-btn btn-outline" data-id="${order.id}" data-action="update">Update</button>
                            </td>
                        `;
                        vendorOrdersTable.appendChild(row);
                    });
                }
            }
        }

        function showPage(page) {
            homePage.classList.add('hidden');
            restaurantMenuPage.classList.add('hidden');
            cartPage.classList.add('hidden');
            checkoutPage.classList.add('hidden');
            confirmationPage.classList.add('hidden');
            adminPanel.classList.add('hidden');
            vendorPanel.classList.add('hidden');
            
            page.classList.remove('hidden');
        }

        function checkAuth() {
            const currentUser = JSON.parse(localStorage.getItem('currentUser'));
            
            if (currentUser) {
                loginBtn.classList.add('hidden');
                signupBtn.classList.add('hidden');
                logoutBtn.classList.remove('hidden');
                
                if (currentUser.role === 'admin') {
                    adminBtn.classList.remove('hidden');
                    vendorBtn.classList.add('hidden');
                } else if (currentUser.role === 'vendor') {
                    adminBtn.classList.add('hidden');
                    vendorBtn.classList.remove('hidden');
                } else {
                    adminBtn.classList.add('hidden');
                    vendorBtn.classList.add('hidden');
                }
            } else {
                loginBtn.classList.remove('hidden');
                signupBtn.classList.remove('hidden');
                logoutBtn.classList.add('hidden');
                adminBtn.classList.add('hidden');
                vendorBtn.classList.add('hidden');
            }
        }

        function generateOrderId() {
            return Math.floor(Math.random() * 100000);
        }

        // Event Listeners
        document.addEventListener('DOMContentLoaded', function() {
            loadRestaurants();
            updateCartCount();
            checkAuth();
            
            // Show home page by default
            showPage(homePage);
        });

        // Navigation
        loginBtn.addEventListener('click', function() {
            loginModal.style.display = 'block';
        });

        signupBtn.addEventListener('click', function() {
            signupModal.style.display = 'block';
        });

        logoutBtn.addEventListener('click', function() {
            localStorage.setItem('currentUser', JSON.stringify(null));
            checkAuth();
            showPage(homePage);
        });

        adminBtn.addEventListener('click', function() {
            loadAdminRestaurants();
            loadAdminOrders();
            loadAdminUsers();
            showPage(adminPanel);
        });

        vendorBtn.addEventListener('click', function() {
            loadVendorMenu();
            loadVendorOrders();
            showPage(vendorPanel);
        });

        cartLink.addEventListener('click', function(e) {
            e.preventDefault();
            loadCart();
            showPage(cartPage);
        });

        backToRestaurantsBtn.addEventListener('click', function() {
            showPage(homePage);
        });

        checkoutBtn.addEventListener('click', function() {
            showPage(checkoutPage);
        });

        placeOrderBtn.addEventListener('click', function() {
            if (deliveryForm.checkValidity()) {
                // Create order
                const cart = JSON.parse(localStorage.getItem('cart'));
                const restaurants = JSON.parse(localStorage.getItem('restaurants'));
                const currentUser = JSON.parse(localStorage.getItem('currentUser'));
                
                if (cart.length > 0) {
                    const restaurantId = cart[0].restaurantId;
                    const restaurant = restaurants.find(r => r.id === restaurantId);
                    
                    const order = {
                        id: generateOrderId(),
                        customer: currentUser ? currentUser.name : document.getElementById('name').value,
                        restaurant: restaurant.name,
                        amount: parseFloat(totalElement.textContent.replace('$', '')),
                        status: 'Received',
                        items: cart.map(item => ({
                            itemId: item.id,
                            name: item.name,
                            quantity: item.quantity,
                            price: item.price
                        })),
                        deliveryDetails: {
                            name: document.getElementById('name').value,
                            phone: document.getElementById('phone').value,
                            address: document.getElementById('address').value,
                            notes: document.getElementById('notes').value
                        },
                        paymentMethod: document.querySelector('input[name="payment"]:checked').value,
                        date: new Date().toISOString()
                    };
                    
                    // Save order
                    const orders = JSON.parse(localStorage.getItem('orders'));
                    orders.push(order);
                    localStorage.setItem('orders', JSON.stringify(orders));
                    
                    // Clear cart
                    clearCart();
                    
                    // Show confirmation
                    document.getElementById('order-number').textContent = `#${order.id}`;
                    document.getElementById('order-total').textContent = `$${order.amount.toFixed(2)}`;
                    showPage(confirmationPage);
                }
            } else {
                deliveryForm.reportValidity();
            }
        });

        backToHomeBtn.addEventListener('click', function() {
            showPage(homePage);
        });

        // Modal close buttons
        document.querySelectorAll('.close-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                this.closest('.modal').style.display = 'none';
            });
        });

        // Close modal when clicking outside
        window.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.style.display = 'none';
            }
        });

        // Show signup from login
        document.querySelector('.show-signup').addEventListener('click', function(e) {
            e.preventDefault();
            loginModal.style.display = 'none';
            signupModal.style.display = 'block';
        });

        // Show login from signup
        document.querySelector('.show-login').addEventListener('click', function(e) {
            e.preventDefault();
            signupModal.style.display = 'none';
            loginModal.style.display = 'block';
        });

        // Login form
        loginForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const email = document.getElementById('login-email').value;
            const password = document.getElementById('login-password').value;
            
            // In a real app, you would validate credentials with a server
            // For this demo, we'll just check if the email exists in our sample data
            
            const admins = JSON.parse(localStorage.getItem('admins'));
            const users = JSON.parse(localStorage.getItem('users'));
            
            let user = admins.find(u => u.email === email);
            if (!user) {
                user = users.find(u => u.email === email);
            }
            
            if (user) {
                // For demo purposes, any password will work
                localStorage.setItem('currentUser', JSON.stringify(user));
                checkAuth();
                loginModal.style.display = 'none';
                alert('Login successful!');
            } else {
                alert('Invalid email or password');
            }
        });

        // Signup form
        signupForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const name = document.getElementById('signup-name').value;
            const email = document.getElementById('signup-email').value;
            const password = document.getElementById('signup-password').value;
            const confirmPassword = document.getElementById('signup-confirm-password').value;
            const role = document.getElementById('user-role').value;
            
            if (password !== confirmPassword) {
                alert('Passwords do not match');
                return;
            }
            
            // Check if email already exists
            const users = JSON.parse(localStorage.getItem('users'));
            const admins = JSON.parse(localStorage.getItem('admins'));
            
            if (users.some(u => u.email === email) || admins.some(u => u.email === email)) {
                alert('Email already exists');
                return;
            }
            
            // Create new user
            const newUser = {
                id: users.length > 0 ? Math.max(...users.map(u => u.id)) + 1 : 1,
                name,
                email,
                role
            };
            
            if (role === 'vendor') {
                // For vendors, create a new restaurant
                const restaurants = JSON.parse(localStorage.getItem('restaurants'));
                const newRestaurant = {
                    id: restaurants.length > 0 ? Math.max(...restaurants.map(r => r.id)) + 1 : 1,
                    name: `${name}'s Restaurant`,
                    description: 'New restaurant',
                    location: 'Mogadishu',
                    hours: '9:00 AM - 10:00 PM',
                    image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',
                    approved: false,
                    menu: []
                };
                
                restaurants.push(newRestaurant);
                localStorage.setItem('restaurants', JSON.stringify(restaurants));
                
                newUser.restaurantId = newRestaurant.id;
            }
            
            users.push(newUser);
            localStorage.setItem('users', JSON.stringify(users));
            localStorage.setItem('currentUser', JSON.stringify(newUser));
            
            signupModal.style.display = 'none';
            checkAuth();
            
            if (role === 'vendor') {
                alert('Your restaurant registration is pending approval. You can now add menu items.');
                loadVendorMenu();
                showPage(vendorPanel);
            } else {
                alert('Account created successfully!');
                showPage(homePage);
            }
        });

        // Add restaurant form
        addRestaurantBtn.addEventListener('click', function() {
            addRestaurantModal.style.display = 'block';
        });

        restaurantForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const restaurants = JSON.parse(localStorage.getItem('restaurants'));
            
            const newRestaurant = {
                id: restaurants.length > 0 ? Math.max(...restaurants.map(r => r.id)) + 1 : 1,
                name: document.getElementById('restaurant-name').value,
                description: document.getElementById('restaurant-description').value,
                location: document.getElementById('restaurant-location').value,
                hours: document.getElementById('restaurant-hours').value,
                image: document.getElementById('restaurant-image').value,
                approved: true,
                menu: []
            };
            
            restaurants.push(newRestaurant);
            localStorage.setItem('restaurants', JSON.stringify(restaurants));
            
            addRestaurantModal.style.display = 'none';
            loadAdminRestaurants();
            restaurantForm.reset();
        });

        // Add menu item form
        addMenuItemBtn.addEventListener('click', function() {
            addMenuItemModal.style.display = 'block';
        });

        menuItemForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const restaurants = JSON.parse(localStorage.getItem('restaurants'));
            const restaurantIndex = restaurants.findIndex(r => r.id === currentVendorRestaurantId);
            
            if (restaurantIndex !== -1) {
                const newMenuItem = {
                    id: restaurants[restaurantIndex].menu.length > 0 ? 
                        Math.max(...restaurants[restaurantIndex].menu.map(m => m.id)) + 1 : 1,
                    name: document.getElementById('item-name').value,
                    description: document.getElementById('item-description').value,
                    price: parseFloat(document.getElementById('item-price').value),
                    image: document.getElementById('item-image').value,
                    available: document.getElementById('item-available').value === 'true'
                };
                
                restaurants[restaurantIndex].menu.push(newMenuItem);
                localStorage.setItem('restaurants', JSON.stringify(restaurants));
                
                addMenuItemModal.style.display = 'none';
                loadVendorMenu();
                menuItemForm.reset();
            }
        });

        // Payment method selection
        paymentOptions.forEach(option => {
            option.addEventListener('change', function() {
                if (this.value === 'evc') {
                    evcForm.classList.add('active');
                } else {
                    evcForm.classList.remove('active');
                }
            });
        });

        // Admin tabs
        adminNavBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const tab = this.getAttribute('data-tab');
                
                adminNavBtns.forEach(b => b.classList.remove('active'));
                adminTabs.forEach(t => t.classList.remove('active'));
                
                this.classList.add('active');
                document.getElementById(`${tab}-tab`).classList.add('active');
            });
        });

        // Vendor tabs
        vendorNavBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const tab = this.getAttribute('data-tab');
                
                vendorNavBtns.forEach(b => b.classList.remove('active'));
                vendorTabs.forEach(t => t.classList.remove('active'));
                
                this.classList.add('active');
                document.getElementById(`${tab}-tab`).classList.add('active');
                
                if (tab === 'vendor-orders') {
                    loadVendorOrders();
                } else if (tab === 'menu') {
                    loadVendorMenu();
                }
            });
        });
    </script>
</body>
</html>
